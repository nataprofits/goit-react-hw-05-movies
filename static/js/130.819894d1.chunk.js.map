{"version":3,"file":"static/js/130.819894d1.chunk.js","mappings":"sLAGaA,E,QAAYC,EAAAA,IAAH,oK,+ICATC,EAAOD,EAAAA,EAAAA,GAAH,oYAkBJE,EAAYF,EAAAA,EAAAA,GAAH,4YAeTG,GAAaH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,+M,6MCjCVK,EAAoBL,EAAAA,EAAAA,IAAH,yQAgBjBM,GAAWN,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,0Y,UCjBRO,EAAUP,EAAAA,EAAAA,IAAH,gD,SC8CpB,EAxCkB,SAAC,GAA2B,IAAD,MAAxBQ,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACpBC,EAA6DF,EAA7DE,MAAOC,EAAsDH,EAAtDG,aAAcC,EAAwCJ,EAAxCI,SAAUC,EAA8BL,EAA9BK,YAAaC,EAAiBN,EAAjBM,aAC9CC,EAAY,oBAAGN,EAASO,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OADAC,QAAQC,IAAIJ,IAEV,iCACE,UAACT,EAAD,CAAUc,GAAIL,EAAd,WACE,SAAC,MAAD,IAAe,cAGjB,UAACR,EAAD,YACE,gBACEc,IAAG,yCAAoCR,GACvCS,IAAI,WAEN,4BACE,0BACGZ,EAAM,IADT,OACWI,QADX,IACWA,OADX,EACWA,EAAcS,MAAM,EAAG,GAAG,QAErC,yBAAG,gBAA6B,GAAfZ,GAAmBa,UAAU,QAC9C,wBAAI,cACJ,uBAAIZ,KACJ,wBAAI,YACJ,iCAAIJ,EAAQiB,cAAZ,aAAI,EAAgBC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,cAGpD,UAACxB,EAAD,YACE,uBAAG,4BACH,2BACE,yBACE,SAAC,KAAD,CAAYe,GAAG,OAAf,SAAsB,YAExB,yBACE,SAAC,KAAD,CAAYA,GAAG,UAAf,SAAyB,sBAMpC,ECLD,EAjCqB,WACnB,OAA8BU,EAAAA,EAAAA,UAAS,MAAvC,eAAOtB,EAAP,KAAgBuB,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFzB,GAAW2B,EAAAA,EAAAA,MAgBjB,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfL,GAAW,GAFI,UAGQM,EAAAA,EAAAA,IAAaL,GAHrB,OAGTM,EAHS,OAIfT,EAAWS,EAASC,MAJL,gDAMfvB,QAAQC,IAAR,MANe,yBAQfc,GAAW,GARI,4EAAH,qDAWhBK,GACD,GAAE,CAACJ,KAGF,oBAASQ,MAAO,CAAEC,QAAS,YAA3B,UACE,UAAC,IAAD,WACGX,IAAW,SAACY,EAAA,EAAD,IACXpC,IAAW,SAAC,EAAD,CAAWA,QAASA,EAASC,SAAUA,KACnD,SAAC,EAAAoC,SAAD,CAAUC,UAAU,SAACF,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,UAKT,C,oKCpCDG,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMT,IAAMC,EAAqB,WAChC,OAAOF,EAAAA,EAAAA,IAAU,kDAClB,EAEYG,EAAc,SAACC,GAC1B,OAAOJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,YACR,EAEYZ,EAAe,SAACY,GAC3B,OAAOJ,EAAAA,EAAAA,IAAA,6CAAgDI,GACxD,EAEYC,EAAW,SAAAD,GACtB,OAAOJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,YACR,EAEYE,EAAgB,SAAAC,GAC3B,OAAOP,EAAAA,EAAAA,IAAA,0DAA6DO,GAErE,C","sources":["components/Container/Container.styled.js","components/Home/Home.styled.js","components/MovieDeteils/MovieDeteils.styled.js","components/MovieDetailsCard.styled/MovieDetailsCard.styled.js","components/MovieDeteils/MovieDeteils.jsx","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const Container = styled.div`\n  padding-right: 30px;\n  /* padding-left: 15px; */\n  background: radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(128,109,113,1) 100%);\n`;","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const List = styled.ul`\n/* display: flex;\nflex-direction: column;\ngap: 10px;\nmargin-right:auto;\nmargin-left:auto; */\ndisplay: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: 16px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  height: 100vh;\n  max-width: calc(100vw - 48px);\n  list-style: none;\n\n`\nexport const MovieItem = styled.li`\n  position: relative;\n  width: calc((1214px - 90px) / 4);\n  text-align: center;\n  border: 1px solid #ffffff;\nborder-radius: 3px;\n  box-shadow: 0px 10px 2px 2px var(--primary-color);\n  background-color: antiquewhite;\n  transition: transform var(--animation), box-shadow var(--animation);\n\n  &:hover {\n    transform: translateY(10px);\n    box-shadow: none;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  font-weight: 500;\n  transition: all 250ms linear;\n  text-decoration: none;\ncolor: black;\n  &:hover {\n    color: rgba(41, 123, 213, 0.71);\n    text-decoration: underline;\n  }\n`;","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const AdditionalWrapper = styled.div`\nmargin: 30px 0px;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\nul {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n  p {\n    font-size: 20px;\n    font-weight:500;\n    padding-left: 10px;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n  border: 1px solid black;\n  border-radius: 5px;\n  color: #fff;\n  background-color: #483d8b;\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 15px;\n  padding: 5px 10px;\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover {\n    background-color: #bc8f8f;\n    color: black;\n  }\n`;","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\ndisplay:flex;\ngap:50px;`","import { BiArrowBack } from 'react-icons/bi';\nimport {\n  AdditionalWrapper,\n  BackLink,\n} from '../MovieDeteils/MovieDeteils.styled';\nimport { StyledLink } from 'components/Home/Home.styled';\nimport { Wrapper } from '../MovieDetailsCard.styled/MovieDetailsCard.styled';\n\nconst MovieInfo = ({ details, location }) => {\n  const { title, vote_average, overview, poster_path, release_date } = details;\n  const backLinkHref = location.state?.from ?? '/';\n  console.log(backLinkHref);\n  return (\n    <>\n      <BackLink to={backLinkHref}>\n        <BiArrowBack />\n        Go back\n      </BackLink>\n      <Wrapper>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt=\"title\"\n        />\n        <div>\n          <h1>\n            {title}({release_date?.slice(0, 4)})\n          </h1>\n          <p>User Score: {(vote_average * 10).toFixed()}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{details.genres?.map(item => item.name).join(' ')}</p>\n        </div>\n      </Wrapper>\n      <AdditionalWrapper>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </li>\n        </ul>\n      </AdditionalWrapper>\n    </>\n  );\n};\nexport default MovieInfo;\n","import { Container } from 'components/Container/Container.styled';\nimport { fetchDetails } from '../services/api';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieDeteils/MovieDeteils';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  useEffect(() => {\n    const getDetails = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchDetails(movieId);\n        setDetails(response.data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getDetails();\n  }, [movieId]);\n\n  return (\n    <section style={{ padding: '30px 0px' }}>\n      <Container>\n        {loading && <Loader />}\n        {details && <MovieInfo details={details} location={location}/>}\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </section>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '64d37a07aa15dae3b8f14e8351f25936';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchPopularMovies = () => {\n  return axios.get('https://api.themoviedb.org/3/trending/movie/day');\n};\n\nexport const fetchReview = (id) => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews`);\n};\n\nexport const fetchDetails = (id) => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}`);\n};\n\nexport const fetchCast= id => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`);\n};\n\nexport const fetchAnyMovie = query => {\n  return axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}`\n  );\n};"],"names":["Container","styled","List","MovieItem","StyledLink","Link","AdditionalWrapper","BackLink","Wrapper","details","location","title","vote_average","overview","poster_path","release_date","backLinkHref","state","from","console","log","to","src","alt","slice","toFixed","genres","map","item","name","join","useState","setDetails","loading","setLoading","movieId","useParams","useLocation","useEffect","getDetails","fetchDetails","response","data","style","padding","Loader","Suspense","fallback","axios","api_key","fetchPopularMovies","fetchReview","id","fetchCast","fetchAnyMovie","query"],"sourceRoot":""}